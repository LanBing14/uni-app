<template>
	<view>
		<view class="list flex-col">
			<user-focus :userFocus="listItem" :titleName="'title-inline'"></user-focus>
			<view class="flex-row" @click="goDetail(listItem.type, listItem.id, listItem.answerId)">
				<!-- 书籍 -->
				<view class="books" v-if="listItem.type === 1">
					<image :src="listItem.opusUrl? listItem.opusUrl : '/static/img/demo2.png'" mode="aspectFill" class="books-img" />
				</view>
				<view class="flex-col">
					<view class="flex-row" style="align-items: center;">
						<text class="list-title" :class="{'list-title2': listItem.type === 1, 'read-status': listItem.readStatus}">{{listItem.realTitle}}</text>
						<text class="tt-tag" v-if="listItem.type === 1">著作</text>
						<text class="tt-tag" v-if="listItem.type === 2">回答</text>
						<text class="tt-tag" v-if="listItem.type === 0">文章</text>
					</view>
					<text class="list-desc" :class="{'list-desc2': listItem.type === 1, 'read-status': listItem.readStatus}">{{listItem.content}}</text>
				</view>
			</view>
			<view class="media-info flex-row" @click="goDetail(listItem.type, listItem.id, listItem.answerId)">
				<text class="info-text" v-if="listItem.publishDate">{{listItem.publishDate | friendlyDate}}</text>
				<text class="info-text">·</text>
				<text class="info-text" v-if="listItem.type !== 2">{{listItem.browseCount}} 浏览</text>
				<text class="info-text" v-if="listItem.type === 2">{{listItem.commentCount}} 评论</text>
				<text class="info-text" v-if="listItem.type === 2">·</text>
				<text class="info-text" v-if="listItem.type === 2">{{listItem.likeCount}} 赞同</text>
			</view>
		</view>
	</view>
</template>

<script>
	import userFocus from '@/components/user-focus.nvue'
	import {
		friendlyDate
	} from '@/common/js/util.js';

	export default {
		components: {
			userFocus
		},
		props: {
			listItem: {
				type: Object,
				default: function(e) {
					return {}
				}
			},
			active: {
				type: Number,
				default: 0
			},
			tabIndex: {
				type: [Number, String],
				default: 0
			}
		},
		data() {
			return {
			}
		},
		onLoad() {
			console.info(this.listItem);
		},
		onShow() {

		},
		filters: {
			friendlyDate
		},
		methods: {
			goDetail(type, id, answerId) {

                this.listItem.readStatus = true;
				this.browseCountAdd();

				if (type === 0) {
					uni.navigateTo({
						url: '/pages/details/details?id=' + id + '&ctype=1'
					});
				} else if ((type === 2)) {
					uni.navigateTo({
						url: '/pages/faq/faq/answer-detail?id=' + answerId
					});
				} else if ((type === 1)) {
					uni.navigateTo({
						url: '/pages/details/book-detail?id=' + id
					});
				} else {
					uni.navigateTo({
						url: '/pages/404.vue'
					});
				}

			},
			click() {
				this.$emit('click');
			},
			close(e) {
				e.stopPropagation();
				this.$emit('close');
			},
			browseCountAdd() {
                this.listItem.browseCount++;
			}
		}
	}
</script>

<style scoped>
	view {
		display: flex;
	}

	.view {
		flex-direction: column;
	}

	.flex-col {
		flex-direction: column;
	}

	.flex-row {
		flex-direction: row;
	}

	.info-text {
		margin-right: 20rpx;
		color: #a3a3a3;
		font-size: 23rpx;
	}

	.list {
		background-color: #ffffff;
		margin-bottom: 17rpx;
		padding: 35rpx 20rpx;
		background-color: #fff;
		border-bottom-width: 20rpx;
		border-bottom-color: #f7f7f7;;
		border-bottom-style: solid;
	}

	.list-title {
		max-width: 640rpx;
		font-size: 32rpx;
		line-height: 44rpx;
		color: #000;
	}

	.list-title2 {
		lines: 1;
		text-overflow: ellipsis;
		max-width: 440rpx;
	}

	.list-desc {
		width: 710rpx;
		font-size: 26rpx;
		line-height: 38rpx;
		color: #787878;
		lines: 3;
		text-overflow: ellipsis;
		margin-top: 10rpx;
	}

	.list-desc2 {
		max-width: 500rpx;
	}

	.explain {
		margin-right: 13rpx;
		background-color: #ce0201;
		color: #FFFFFF;
		font-size: 20rpx;
		height: 30rpx;
		width: 60rpx;
		line-height: 30rpx;
		text-align: center;
		padding: 0 10rpx;
	}

	.books-img {
		width: 175rpx;
		height: 230rpx;
		margin-right: 28rpx;
		border-radius: 10rpx;
	}

	.tt-tag {
		margin-left: 10rpx;
		padding: 0 10rpx;
		height: 40rpx;
		line-height: 40rpx;
		border-radius: 10rpx;
		color: #b1b1b1;
		font-size: 20rpx;
		text-align: center;
		border-width: 1rpx;
		border-color: solid;
		border-color: #b1b1b1;
		lines: 1;
		text-overflow: ellipsis;
		overflow: hidden;
	}

	.explain {
		margin-right: 13rpx;
		background-color: #ce0201;
		color: #FFFFFF;
		font-size: 20rpx;
		height: 30rpx;
		width: 60rpx;
		line-height: 30rpx;
		text-align: center;
		padding: 0 10rpx;
	}

	.media-info {
		flex-direction: row;
		align-items: center;
		margin-top: 16rpx;
	}

	.info-box {
		width: 710rpx;
	}

	.info-box1 {
		width: 507rpx;
	}

	.read-status {
		color: #999999;
	}
</style>
