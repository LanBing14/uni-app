<template>
	<view>
		<view class="list flex-col" @click="goDetail(tabIndex, listItem.id, listItem.answerId)">
			<view class="flex-col">
				<view class="flex-col">
					<view class="flex-row">
						<view class="books" v-if="tabIndex === 1">
							<image :src="listItem.opusUrl? listItem.opusUrl : imgUrl" mode="aspectFill" class="books-img"></image>
						</view>
						<view class="flex-col info-box" :class="{'info-box1': tabIndex === 1}">
							<text class="list-title">{{listItem.title}}</text>
							<!-- <text class="explain" v-if="tabIndex === 2">Ta的回答</text> -->
							<text class="list-desc" v-if="listItem.content" :class="{'list-desc4': tabIndex === 1, 'text-indent2': tabIndex === 2}">{{listItem.content}}</text>
						</view>
					</view>
				</view>
					
				<view class="media-info flex-row">
					<text class="info-text" v-if="listItem.publishDate">{{listItem.publishDate | friendlyDate }}  · </text>
					<text class="info-text" v-if="tabIndex !== 2">{{listItem.browseCount}} 浏览</text>
					<text class="info-text" v-if="tabIndex === 2">{{listItem.commentCount}} 评论</text>
					<text class="info-text" v-if="tabIndex === 2">·</text>
					<text class="info-text" v-if="tabIndex === 2">{{listItem.likeCount}} 赞同</text>

				</view>
			</view>		
		</view>
	</view>
</template>

<script>
	import {
		friendlyDate
	} from '@/common/js/util.js';
	
	export default {
		filters: {
			friendlyDate
		},
		props: {
		    listItem: {
		        type: Object,
		        default: function(e) {
		            return {}
		        }
		    },
			tabIndex: {
		        type: [Number, String],
		        default: 0
		    },
		},
		data (){
			return {
				imgUrl: '/static/img/demo2.png',
				strings: []
			}
		},
		methods: {
			goDetail(tabIndex, id, answerId) {
				if (tabIndex === 0) {
					uni.navigateTo({
						url: '/pages/details/details?id=' + id
					});
				} else if (tabIndex === 1) {
					uni.navigateTo({
						url: '/pages/details/book-detail?id=' + id
					});
				} else if (tabIndex === 2) {
					uni.navigateTo({
						url: '/pages/faq/faq/answer-detail?id=' + answerId
					});
				} else {
					uni.navigateTo({
						url: "/pages/404"
					});
				}			
			},
		    click() {
		        this.$emit('click');
		    },
		    close(e) {
		        e.stopPropagation();
		        this.$emit('close');
		    }
		}
	}
</script>

<style scoped>
view {
	display: flex;
}
.view {
	flex-direction: column;
}
.flex-col {
	flex-direction: column;
}
.flex-row {
	flex-direction: row;
}
.info-text {
	margin-right: 20rpx;
	color: #a3a3a3;
	font-size: 23rpx;
}
.list {
	background-color: #ffffff;
	margin-bottom: 17rpx;
	padding: 35rpx 20rpx;
}
.list-title {
	font-size: 32rpx;
	line-height: 44rpx;
	color: #000000;
	lines: 1;
	text-overflow: ellipsis;
}
.list-desc {
	margin-top: 20rpx;
	font-size: 26rpx;
	line-height: 38rpx;
	color: #787878;
	lines: 3;
	text-overflow: ellipsis;
}
.list-desc4 {
	lines: 4;
	text-overflow: ellipsis;
}
.explain {
	margin-right: 13rpx;
	background-color: #ce0201;
	color: #FFFFFF;
	font-size: 20rpx;
	height: 30rpx;
	line-height: 30rpx;
	text-align: center;
	padding: 0 10rpx;
}
.books-img {
	width: 175rpx;
	height: 230rpx;
	margin-right: 28rpx;
}
.tt-tag {
	width: 97rpx;
	height: 40rpx;
	line-height: 40rpx;
	border-radius: 10rpx;
	color: #b1b1b1;
	font-size: 24rpx;
	text-align: center;
	border: 1rpx solid #b1b1b1;
	lines: 1;
	text-overflow: ellipsis;
	overflow: hidden;
}
.explain {
	margin-right: 13rpx;
	background-color: #ce0201;
	color: #FFFFFF;
	font-size: 20rpx;
	height: 30rpx;
	width: 110rpx;
	line-height: 30rpx;
	text-align: center;
	padding: 0 10rpx;
}
.media-info {
	margin-top: 20rpx;
}
.info-box {
	width: 710rpx;
}
.info-box1 {
	width: 507rpx;
}
.text-indent2 {
	/* padding-left: 20px; */
}
</style>
