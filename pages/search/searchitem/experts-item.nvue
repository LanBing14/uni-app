<template>
	<view class="experts-item">
		<view class="experts-user">
			<view class="user-info"  @click="itemClick(value.id)">
				<image class="user-img" :src="headImgUrl(value.headPicUrl)" mode=""></image>
				<view class="user-desc">
					<rich-text class="user-name" :nodes="html2text(value.expertName)"></rich-text>
					<view class="user-titp">
						<rich-text class="user-time" :nodes="html2text(value.expertTitle)"></rich-text>
					</view>
				</view>
			</view>
			<view class="user-focus" @click="getUserInfo(value.id)">
				<text v-if="!value.status" class="add-focus">+关注</text>
				<text v-if="value.status" class="cancel-focus">已关注</text>
			</view>
		</view>
		<view class="experts-desc pdT0">
			<rich-text class="desc-text" :nodes="html2text(value.expertIntro)"></rich-text>
		</view>
		<view class="space-line"></view>
		
		<tip-box ref='tip' :info="tipInfo"></tip-box>
	</view>
</template>

<script>
    import {
        mapGetters
    } from 'vuex'
	import {Api_GetAttentionAdd} from "@/api/faq.js";
	import * as utils from "@/utils/index.js";
	import { parseHtml } from '@/common/js/html-parser.js'
    export default {
		components: {
			// addFocus
		},
        props: {
            value: {
                type: Object,
                default: function(e) {
                    return{}
                }
            }
        },
		filters: {
		  lengthfilter: function (value,len) {
		    if (!value) return ''
		    value = value.toString()
		    return (value.length>len) ? (value.substring(0,len)+' ...') : value
		  },
			filterStatus: function(value) {
				if (value == 0) {
					return false
				} else {
					return true
				}
			}
		},
        computed: {
            ...mapGetters([
                'focusId'
            ])
        },
        watch: {
            'focusId': function(val){
                if(val == this.value.id){
                    this.value.status = !this.value.status;
                }
            }
        },
		data(){
			return {
				imgUrl: '/static/img/demo1.png',
				btnType:0,
				tipInfo:{type: 2, dialogVisible: false},
			}
		},
		methods: {
			html2text(html){
				return html ? parseHtml(html) : '' ;
			},
			headImgUrl(url){
				return url?url:'/static/img/demo2.png';
			},
            getUserInfo(businessId) {
                utils.getUserInfo(true).then(user => {
					// 点击关注的时候，储存点击状态和点击的id
					this.$store.dispatch('clickBtn')
					this.$store.dispatch('setId', businessId)
                    if (user.isLogin) {
                        this.login = true;
                        // 调接口
                        Api_GetAttentionAdd({
                            businessId: businessId,
                            type: 0
                        }).then(res => {
                            if (res.statusCode === 1) {
                                let tips = ''
                                if (this.value.status) {
                                    tips = '关注成功'
                                } else {
                                    tips = '取消关注成功'
                                }
                                uni.showToast({
                                    icon: 'none',
                                    title: tips,
                                    duration: 2000
                                });
                            } else if (res.statusCode === 2) {
                                // 第一次关注
                                this.$refs.tip.show();
                            } else if (res.statusCode === 403) {
                                uni.showToast({
                                    icon: 'none',
                                    title: res.message,
                                    duration: 2000
                                });
                            } else {
                                uni.showToast({
                                    icon: 'none',
                                    title: '关注失败',
                                    duration: 2000
                                });
                            }
							// 接口成功后初始化store里的内容
							this.$store.dispatch('setId', '')
							this.$store.dispatch('clickBtn', false)
                        })
                    } else {
                        this.login = false;
                        uni.showToast({
                            icon: 'none',
                            title: '请先登录',
                            duration: 2000
                        });
                        setTimeout(function() {
                            uni.navigateTo({
                                url: '/pages/login/login'
                            });
                        }, 1000);
                    }
                });
            },
            itemClick(id) {
                uni.navigateTo({url: '/pages/specialist/specialist?expertId=' + id});
            }
        }
    }
</script>
<style scoped>
.experts-item {
	background-color: #ffffff;
}
.pdT0{
	padding-top: 0!important;
}
.space-line {
	background-color: #f7f7f7;
	height: 20rpx;
	width: 750px;
	margin-top: 24rpx;
}
.experts-user{
	flex: 1;
	display: flex;
	flex-direction: row;
	align-items: center;
	justify-content: space-between;
}
.user-info{
	flex: 1;
	display: flex;
	flex-direction: row;
	align-items: center;
	padding: 20rpx 24rpx 20rpx 24rpx;
}
.user-img{
	width: 62rpx;
	height: 62rpx;
	border-radius: 200rpx;
	margin-right: 15rpx;
}
.user-desc{
	flex: 1;
	flex-direction: column;
	margin-right: 10rpx;
}
.experts-desc{
	padding: 0 24rpx 20rpx 24rpx;
	height: 96rpx;
	overflow: hidden;
}
.desc-text{
	lines: 3;
	text-overflow: ellipsis;
	color: #787878;
	font-size: 26rpx;
}
.user-name{
	lines: 1;
	color: #000000;
	font-size: 35rpx;
	text-overflow: ellipsis;
}
.user-time{
	lines: 1;
	font-size: 20rpx;
	color: #999999;
	text-overflow: ellipsis;
}
.user-focus{
	margin-right: 20rpx;
}
.add-focus {
	padding: 8rpx 14rpx;
	/* width: 97rpx;
	height: 40rpx;
	line-height: 40rpx; */
	border-radius: 10rpx;
	color: #ce0201;
	font-size: 24rpx;
	text-align: center;
	border-width: 2rpx;
	border-color: #ce0201;
	border-style: solid;
}
.cancel-focus {
	padding: 8rpx 14rpx;
	/* width: 97rpx;
	height: 40rpx;
	line-height: 40rpx; */
	border-radius: 10rpx;
	font-size: 24rpx;
	text-align: center;
	border-width: 2rpx;
	border-color: #ce0201;
	border-style: solid;
	background-color: #ce0201;
	color: #ffffff;
} 
</style>
